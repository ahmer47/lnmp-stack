user  www-data; 
worker_processes auto;
worker_rlimit_nofile 100000; 
pid        /var/run/nginx.pid;
error_log  /var/log/nginx/error.log warn;

events {
    worker_connections 10000;
    use epoll;
    multi_accept on;
}
http {
	#	set_cookie_flag HttpOnly secure;
	#	add_header Access-Control-Allow-Origin "*";
	#	add_header Access-Control-Allow-Origin "https://";
		add_header Content-Security-Policy upgrade-insecure-requests;		
add_header X-Frame-Options "SAMEORIGIN";
		fastcgi_hide_header X-Powered-By;
		fastcgi_hide_header X-Generator;
	##
	# Basic Settings
	##
#add_header Content-Security-Policy upgrade-insecure-requests;	
fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=CACHEZONE:10m inactive=60m max_size=40m;
	fastcgi_cache_key "$scheme$request_method$host$request_uri";
	add_header X-Cache $upstream_cache_status;
	open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	 
	types_hash_max_size 2048;
	add_header X-XSS-Protection "1; mode=block";
	#add_header X-Content-Type-Options nosniff;
	#add_header X-Frame-Options SAMEORIGIN;
	
	server_tokens off;

	fastcgi_max_temp_file_size 0;
    fastcgi_buffers 64 64k;
    fastcgi_buffer_size 128k;

    fastcgi_read_timeout 1200;
    fastcgi_send_timeout 1200;

    client_max_body_size 2048m;	
	# reduce the data that needs to be sent over network -- for 
	# testing environment
    gzip on;
    # gzip_static on;
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
	#    gzip_proxied expired no-cache no-store private auth;
	gzip_types
	# text/html is always compressed by HttpGzipModule
	text/css
	text/javascript
	text/xml
	text/plain
	text/x-component
	application/javascript
	application/x-javascript
	application/json
	application/xml
	application/rss+xml
	application/atom+xml
	font/truetype
	font/opentype
	application/vnd.ms-fontobject
	image/svg+xml;
	
	server_names_hash_bucket_size 256;
	# allow the server to close connection on non responding client, 
	# this will free up memory
    reset_timedout_connection on;
    # request timed out -- default 60
    client_body_timeout 10;
    # if client stop responding, free up memory -- default 60
    send_timeout 2;
    # server will close connection after this time -- default 75
    keepalive_timeout 30;
    # number of requests client can make over keep-alive -- for testing 
    # environment
    keepalive_requests 100000;
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	##
	#L Settings
	##
	#l_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
#	ssl_prefer_server_ciphers on;
	##
#Logging Settings
	##
#access_log /var/log/nginx/access.log;
	error_log /var/www/error.log;
	##
	# Gzip Settings
	##
	 
	# gzip_vary on; gzip_proxied any; gzip_comp_level 6; 
	# gzip_buffers 16 8k; gzip_http_version 1.1; gzip_types 
	# text/plain text/css application/json application/javascript 
	# text/xml application/xml application/xml+rss text/javascript;
	##
	# Virtual Host Configs
	##
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
